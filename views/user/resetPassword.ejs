<%- include('../layout/header.ejs') %>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FurnSpace</title>
    <link rel="icon" href="/assets//images/logo icon 2.png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-image: url('/assets/images/slider/slide-1-480w.jpg');
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        h2 {
            color: #424242;
            margin-bottom: 20px;
            font-size: 32px;
        }

        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333;
        }

        input[type="password"] {
            width: 95%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 1px;
            outline: none;
        }

        input:hover {
            border-color: #d4a373;
        }

        button {
            border: 1px solid #d4a373;
            background-color: transparent;
            color: #d4a373;
            padding: 10px 20px;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.3s, color 0.3s;
            text-decoration: none;
            font-size: 1.3rem;
            margin-left: 106px;
        }

        button:hover {
            background-color: #d4a373;
            color: white;
        }

        #message {
            margin-top: 10px;
            font-size: 14px;
        }
    </style>
</head>

<body>

    <form id="resetPasswordForm">
        <h2 style="text-align: center;">Reset Password</h2>
        <input type="hidden" id="token" value="<%= token %>">
        <input type="hidden" id="userId" value="<%= userId %>">


        <div class="form-group">
            <label for="password">Password *</label>
            <div class="input-group">
                <input type="password" class="form-control" id="password" name="password" required />
                <div class="input-group-append">
                    <span class="input-group-text" style="cursor: pointer;">
                        <i id="toggle-password" class="fa fa-eye"></i>
                    </span>
                </div>
            </div>
            <!-- <div class="invalid-feedback" id="password-error" style="display: none">
                Password is required.
            </div> -->
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirm Password *</label>
            <div class="input-group">
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required />
                <div class="input-group-append">
                    <span class="input-group-text" style="cursor: pointer;">
                        <i id="toggle-confirm-password" class="fa fa-eye"></i>
                    </span>
                </div>
            </div>
            <!-- <div class="invalid-feedback" id="confirm-password-error" style="display: none">
                Confirm Password is required.
            </div> -->
        </div>
        <p id="message" style="text-align: center; font-size: 12px;"></p>
        <button type="submit">Reset Password</button>
        
    </form>

    <script>
        document.getElementById('resetPasswordForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const token = document.getElementById('token').value;
            const userId = document.getElementById('userId').value;
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const messageElement = document.getElementById('message');

            // const passwordError = document.getElementById('password-error');
            // const confirmPasswordError = document.getElementById('confirm-password-error');

            // Password validation regex for at least one uppercase letter, one number, and minimum 8 characters
            const passwordRegex = /^(?=.*[A-Z])(?=.*\d).{8,}$/;

            if (!passwordRegex.test(password)) {
                messageElement.textContent = "Password must be at least 8 characters long, contain a capital letter and a number.";
                messageElement.style.color = "red";
                // passwordError.style.display = "block";
                return;
            }

            // passwordError.style.display = "none";

            if (password !== confirmPassword) {
                messageElement.textContent = "Passwords do not match.";
                messageElement.style.color = "red";
                confirmPasswordError.style.display = "block";
                return;
            }

            // confirmPasswordError.style.display = "none";

            fetch('/reset-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ token, userId, password })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    messageElement.textContent = data.message;
                    messageElement.style.color = "green";
                    setTimeout(() => {
                        window.location = 'http://localhost:5058/login'
                    }, 2000)
                } else {
                    messageElement.textContent = data.message;
                    messageElement.style.color = "red";
                }
            })
            .catch(error => {
                messageElement.textContent = "An error occurred. Please try again.";
                messageElement.style.color = "red";
            });
        });

        // Toggle password visibility for password field
        document.getElementById('toggle-password').addEventListener('click', function () {
            const passwordField = document.getElementById('password');
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            this.classList.toggle('fa-eye');
            this.classList.toggle('fa-eye-slash');
        });

        // Toggle password visibility for confirm password field
        document.getElementById('toggle-confirm-password').addEventListener('click', function () {
            const confirmPasswordField = document.getElementById('confirmPassword');
            const type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordField.setAttribute('type', type);
            this.classList.toggle('fa-eye');
            this.classList.toggle('fa-eye-slash');
        });
    </script>

<%- include('../layout/footer.ejs') %>
