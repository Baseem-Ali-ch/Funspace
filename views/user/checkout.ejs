<%- include('../layout/header.ejs') %>


    <style>
        .error-message {
            color: red;
            font-size: 0.875em;
        }
    </style>
    <style>
        .address-container {
            display: flex;
            flex-direction: column;
            margin-top: 10px;
        }

        .address-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
        }

        .address-item input[type="radio"] {
            margin-right: 15px;
        }

        .address-item p {
            margin: 0;
            line-height: 1.5;
        }
    </style>


    <div class="page-wrapper">
        <header class="header">
            <div class="header-top">
                <div class="container">
                    <div class="header-left col-lg-7">

                        <div class=" breadcrumbs">
                            <ol class="breadcrumb">
                                <% breadcrumbs.forEach((crumb, index)=> { %>
                                    <% if (index < breadcrumbs.length - 1) { %>
                                        <!-- Breadcrumbs with links -->
                                        <li class="breadcrumb-item">
                                            <a href="<%= crumb.url %>">
                                                <%= crumb.name %>
                                            </a>
                                        </li>
                                        <% } else { %>
                                            <!-- Current page breadcrumb without link -->
                                            <li class="breadcrumb-item active" aria-current="page">
                                                <%= crumb.name %>
                                            </li>
                                            <% } %>
                                                <% }); %>
                            </ol>
                        </div>
                        <!-- End .container -->

                        <!-- End .breadcrumb-nav -->
                    </div><!-- End .header-left -->

                    <div class="header-right">
                        <ul class="top-menu">
                            <li>
                                <a href="#">Links</a>
                                <ul>

                                    <li>
                                        <a href="/wishlist"><i class="icon-heart-o"></i>Wishlist
                                            <% if(wishlistItems){ %>
                                                <span>
                                                    (<%= wishlistItems.length %>)
                                                </span>
                                                <% }else{ %>
                                                    <span>
                                                        (0)
                                                    </span>
                                                    <% } %>

                                        </a>

                                    </li>
                            </li>
                            <li><a href="about.html">About Us</a></li>
                            <li><a href="/contact-us">Contact Us</a></li>
                            <% if (user) { %>
                                <li>
                                    <a href="/account"><i class="icon-user"></i>
                                        <%= user.name || user.displayName %>
                                    </a>
                                </li>
                                <% } else { %>
                                    <li>
                                        <a href="/login"><i class="icon-user"></i>Login</a>
                                    </li>
                                    <% } %>
                        </ul>
                        </li>
                        </ul><!-- End .top-menu -->
                    </div><!-- End .header-right -->
                </div><!-- End .container -->
            </div><!-- End .header-top -->

            <div class="header-middle sticky-header">
                <div class="container">
                    <div class="header-left">
                        <button class="mobile-menu-toggler">
                            <span class="sr-only">Toggle mobile menu</span>
                            <i class="icon-bars"></i>
                        </button>

                        <a href="/home" class="logo">
                            <img src="/assets/images/furnspace logo black.png " alt=Molla Logo" width="105" height="25">
                        </a>

                        <nav class="main-nav">
                            <ul class="menu sf-arrows">
                                <li class="megamenu-container active">
                                    <a href="/home" class="">Home</a>
                                </li>
                                <li>
                                    <a href="/product-list">Product</a>
                                </li>


                                <li>
                                    <a href=" #" class="sf-with-ul">Brand</a>
                                    <ul>
                                        <li><a href="#">IKEA</a></li>
                                        <li><a href="#">DURIAN</a></li>
                                        <li><a href="#">URBAN LADDER</a></li>
                                        <li><a href="#">FURNITURE PARK</a></li>
                                        <li><a href="#">HOME TOWN</a></li>
                                        <li><a href="#">WOODEN STREET</a></li>
                                    </ul>
                                </li>

                                <li>
                                    <a href="#" class="sf-with-ul">Pages</a>

                                    <ul>
                                        <li><a href="about.html">About</a></li>
                                        <li><a href="/contact-us">Contact</a></li>
                                        <li><a href="/login">Login</a></li>

                                        <li><a href="coming-soon.html">Coming Soon</a></li>
                                    </ul>
                                </li>
                            </ul>
                            <!-- End .menu -->
                        </nav><!-- End .main-nav -->
                    </div><!-- End .header-left -->

                    <div class="header-right">
                        <div class="header-search">
                            <a href="#" class="search-toggle" role="button" title="Search"><i
                                    class="icon-search"></i></a>
                            <form action="#" method="get">
                                <div class="header-search-wrapper">
                                    <label for="search-input" class="sr-only">Search</label>
                                    <input type="search" class="form-control" name="q" id="search-input"
                                        placeholder="Search in..." required onkeyup="searchCart()" />
                                </div>
                                <!-- End .header-search-wrapper -->
                            </form>
                        </div><!-- End .header-search -->

                        <div class=" cart-dropdown">
                            <a href="/wallet" class="dropdown-toggle" style="font-size: 23px;">
                                <i class="fa-solid fa-wallet"></i>
                            </a>
                        </div>


                        <div class="dropdown cart-dropdown">
                            <a href="/cart" class="dropdown-toggle">
                                <i class="icon-shopping-cart"></i>
                                <% if(cartItems){ %>
                                    <span class="cart-count">
                                        <%= cartItems.length %>
                                    </span>
                                    <% }else{ %>
                                        <span class="cart-count">0</span>
                                        <% } %>

                            </a>
                        </div>
                    </div><!-- End .header-right -->
                </div><!-- End .container -->
            </div><!-- End .header-middle -->
        </header><!-- End .header -->

        <main class="main">
            <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
                <div class="container">
                    <h1 class="page-title">Checkout<span>Shop</span></h1>
                </div><!-- End .container -->
            </div><!-- End .page-header -->


            <div class="page-content">
                <div class="checkout">
                    <div class="container">
                        <div class="checkout-discount ">
                            <form id="applyCouponForm" action="#">
                                <input type="text" class="form-control" required id="checkout-discount-input"
                                    placeholder="Enter your coupon code" name="couponCode">
                                <p id="removeCoupon" class="text-success"></p>
                                <div class="row" style="gap: 5px;">
                                    <button type="button" class="btn btn-primary" onclick="applyCoupon()">Apply
                                        Coupon</button>
                                    <button type="button" id="clear" class="btn btn-sm btn-primary">
                                        Remove</button>
                                </div>

                            </form>
                        </div><!-- End .checkout-discount -->
                        <div>
                            <a href="#" data-toggle="modal" data-target="#couponModal">Available coupon</a>
                        </div>
                        <div id="billingAddress"></div>

                        <form action="/checkout" method="post">
                            <div class="row">
                                <div class="col-lg-9 mt-2">
                                    <button type="button" class="btn btn-outline-primary-2" data-toggle="modal"
                                        data-target="#addressModal">Add New Address</button>
                                    <div id="addressList" class="mb-3" style="display: none;"></div>
                                    <div id="addressList" style="border: 1px solid #ccc; display: none;"></div>
                                    <div class="address-container mt-2">

                                        <% if (addresses && addresses.length> 0) { %>
                                            <h6 class="mb-2">Select the address</h6>
                                            <% addresses.forEach(addr=> { %>

                                                <div class="address-item">
                                                    <input type="radio" name="address" value="<%= addr._id %>"
                                                        id="address_<%= addr._id %>">
                                                    <p>
                                                        <strong>
                                                            <%= addr.fullName %>
                                                        </strong> <br>
                                                        <%= addr.phone %> <br>
                                                            <%= addr.streetAddress %>, <%= addr.apartment %><br>
                                                                    <%= addr.town %>, <%= addr.city %>, <%= addr.state
                                                                                %> <br>
                                                                                <%= addr.postcode %>

                                                </div>

                                                <% }) %>
                                                    <% } else { %>
                                                        <p>No address found !. Add a new address</p>
                                                        <% } %>

                                    </div>
                                </div><!-- End .col-lg-9 -->

                                <aside class="col-lg-3">
                                    <div class="summary">
                                        <h3 class="summary-title">Your Order</h3><!-- End .summary-title -->
                                        <table class="table table-summary">
                                            <thead>
                                                <tr>
                                                    <th>Product</th>
                                                    <th>Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% let subtotal=0; %>
                                                    <% cartItems.forEach(item=> { %>
                                                        <% const product=item.productId; %>
                                                            <% const itemTotal=parseFloat(product.finalPrice) *
                                                                item.quantity; %>
                                                                <% subtotal +=itemTotal; %>
                                                                    <tr>
                                                                        <td>
                                                                            <a href="/product/<%= product._id %>">

                                                                                <span>
                                                                                    <%= product.name %>
                                                                                </span>
                                                                            </a>
                                                                            <% if (product.offer) { %>
                                                                                <br>
                                                                                <small class="text-muted">
                                                                                    Offer: <%= product.offer.discount %>
                                                                                        % off
                                                                                </small>
                                                                                <% } %>
                                                                        </td>
                                                                        <td>
                                                                            ₹ <%= itemTotal.toFixed(2) %>
                                                                        </td>
                                                                    </tr>
                                                                    <% }); %>
                                            </tbody>
                                            <tfoot>

                                                <tr>
                                                    <td>Coupon Amount:</td>
                                                    <td id="couponStatus">₹<span id="couponAmount">
                                                            <%= discountAmount.toFixed(2) %>
                                                        </span></td>
                                                </tr>
                                                <tr class="summary-total"
                                                    style="font-weight: 400; font-size: 1.6rem; color: #c96; border-bottom: none;">
                                                    <td> Sub Total:</td>
                                                    <td id="totalAmount">₹<span id="totalValue">
                                                            <%= totalAmount.toFixed(2) %>
                                                        </span></td>
                                                </tr>
                                                <tr class="summary-new-total"
                                                    style="font-weight: 400; font-size: 1.6rem; color: #c96; border-bottom: none;">
                                                    <td>Total:</td>
                                                    <td id="newTotalAmount">₹<span id="newTotalValue">
                                                            <%= totalAmount.toFixed(2) %>
                                                        </span></td>
                                                </tr>

                                            </tfoot>
                                        </table>





                                        <div class="accordion-summary" id="accordion-payment">




                                            <form action="/placeOrder" method="POST">
                                                <div class="form-group">
                                                    <div class="card">
                                                        <div class="card-header" id="heading-3">
                                                            <h2 class="card-title">
                                                                <input type="radio" name="paymentMethod" id="cod"
                                                                    value="COD" required>
                                                                <label for="cod">Cash on Delivery</label>
                                                            </h2>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <div class="card">
                                                        <div class="card-header" id="heading-wallet">
                                                            <h2 class="card-title">
                                                                <input type="radio" name="paymentMethod" id="wallet"
                                                                    value="Wallet" required>
                                                                <label for="wallet">Pay with Wallet</label>
                                                            </h2>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <div class="card">
                                                        <div class="card-header" id="heading-5">
                                                            <h2 class="card-title">
                                                                <input type="radio" name="paymentMethod" id="razorpay"
                                                                    value="Razorpay" required>
                                                                <label for="razorpay">Online Payment</label>
                                                            </h2>
                                                        </div>
                                                    </div>
                                                </div>
                                                <button id="proceed-button" type="button" class="btn btn-primary">Place
                                                    Order</button>

                                                <!-- Include other form elements such as address selection, etc. -->

                                                <!-- <button type="submit" id="submitForm"
                                                class="btn btn-outline-primary-2 btn-order btn-block">
                                                <span class="btn-text">Place Order</span>
                                                <span class="btn-hover-text">Proceed to Checkout</span>
                                            </button> -->
                                            </form>
                                        </div><!-- End .accordion -->


                                    </div><!-- End .summary -->
                                </aside><!-- End .col-lg-3 -->
                            </div><!-- End .row -->
                        </form>
                    </div><!-- End .container -->
                </div><!-- End .checkout -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->

        <footer class="footer">
            <div class="footer-middle">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-6 col-lg-3">
                            <div class="widget widget-about">
                                <img src="/assets/images/furnspace logo black.png " class="footer-logo"
                                    alt="Footer Logo" width="105" height="25">
                                <p>Praesent dapibus, neque id cursus ucibus, tortor neque egestas augue, eu vulputate
                                    magna eros eu erat. </p>

                                <div class="social-icons">
                                    <a href="#" class="social-icon" target="_blank" title="Facebook"><i
                                            class="icon-facebook-f"></i></a>
                                    <a href="#" class="social-icon" target="_blank" title="Twitter"><i
                                            class="icon-twitter"></i></a>
                                    <a href="#" class="social-icon" target="_blank" title="Instagram"><i
                                            class="icon-instagram"></i></a>
                                    <a href="#" class="social-icon" target="_blank" title="Youtube"><i
                                            class="icon-youtube"></i></a>
                                    <a href="#" class="social-icon" target="_blank" title="Pinterest"><i
                                            class="icon-pinterest"></i></a>
                                </div><!-- End .soial-icons -->
                            </div><!-- End .widget about-widget -->
                        </div><!-- End .col-sm-6 col-lg-3 -->

                        <div class="col-sm-6 col-lg-3">
                            <div class="widget">
                                <h4 class="widget-title">Useful Links</h4><!-- End .widget-title -->

                                <ul class="widget-list">
                                    <li><a href="about.html">About Molla</a></li>
                                    <li><a href="#">How to shop on Molla</a></li>
                                    <li><a href="#">FAQ</a></li>
                                    <li><a href="contact.html">Contact us</a></li>
                                    <li><a href="login.html">Log in</a></li>
                                </ul><!-- End .widget-list -->
                            </div><!-- End .widget -->
                        </div><!-- End .col-sm-6 col-lg-3 -->

                        <div class="col-sm-6 col-lg-3">
                            <div class="widget">
                                <h4 class="widget-title">Customer Service</h4><!-- End .widget-title -->

                                <ul class="widget-list">
                                    <li><a href="#">Payment Methods</a></li>
                                    <li><a href="#">Money-back guarantee!</a></li>
                                    <li><a href="#">Returns</a></li>
                                    <li><a href="#">Shipping</a></li>
                                    <li><a href="#">Terms and conditions</a></li>
                                    <li><a href="#">Privacy Policy</a></li>
                                </ul><!-- End .widget-list -->
                            </div><!-- End .widget -->
                        </div><!-- End .col-sm-6 col-lg-3 -->

                        <div class="col-sm-6 col-lg-3">
                            <div class="widget">
                                <h4 class="widget-title">My Account</h4><!-- End .widget-title -->

                                <ul class="widget-list">
                                    <li><a href="#">Sign In</a></li>
                                    <li><a href="cart.html">View Cart</a></li>
                                    <li><a href="#">My Wishlist</a></li>
                                    <li><a href="#">Track My Order</a></li>
                                    <li><a href="#">Help</a></li>
                                </ul><!-- End .widget-list -->
                            </div><!-- End .widget -->
                        </div><!-- End .col-sm-6 col-lg-3 -->
                    </div><!-- End .row -->
                </div><!-- End .container -->
            </div><!-- End .footer-middle -->

            <div class="footer-bottom">
                <div class="container">
                    <p class="footer-copyright">Copyright © 2019 Molla Store. All Rights Reserved.</p>
                    <!-- End .footer-copyright -->
                    <figure class="footer-payments">
                        <img src="assets/images/payments.png" alt="Payment methods" width="272" height="20">
                    </figure><!-- End .footer-payments -->
                </div><!-- End .container -->
            </div><!-- End .footer-bottom -->
        </footer><!-- End .footer -->
    </div><!-- End .page-wrapper -->
    <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

    <!-- Mobile Menu -->
    <div class="mobile-menu-overlay"></div><!-- End .mobil-menu-overlay -->

    <div class="mobile-menu-container">
        <div class="mobile-menu-wrapper">
            <span class="mobile-menu-close"><i class="icon-close"></i></span>

            <form action="#" method="get" class="mobile-search">
                <label for="mobile-search" class="sr-only">Search</label>
                <input type="search" class="form-control" name="mobile-search" id="mobile-search"
                    placeholder="Search in..." required>
                <button class="btn btn-primary" type="submit"><i class="icon-search"></i></button>
            </form>

            <nav class="mobile-nav">
                <ul class="mobile-menu">
                    <li class="active">
                        <a href="/home">Home</a>
                    </li>
                    <li>
                        <a href="/product-list" class="">Product</a>
                    </li>
                    <li>
                        <a href=" #" class="sf-with-ul">Category</a>
                        <ul>
                            <% categories.forEach(function(category) { %>

                                <li><a href="/category/<%= category._id %>">
                                        <%= category.title %>
                                    </a></li>

                                <% }) %>
                        </ul>
                    </li>
                    <li>
                        <a href=" #" class="sf-with-ul">Brand</a>
                        <ul>
                            <li><a href="#">IKEA</a></li>
                            <li><a href="#">DURIAN</a></li>
                            <li><a href="#">URBAN LADDER</a></li>
                            <li><a href="#">FURNITURE PARK</a></li>
                            <li><a href="#">HOME TOWN</a></li>
                            <li><a href="#">WOODEN STREET</a></li>
                        </ul>
                    </li>
                    <li>
                        <a href="#">Pages</a>
                        <ul>
                            <li>
                                <a href="/login">Login</a>
                            </li>
                            <li>
                                <a href="/contact-us">Contact</a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </nav>

            <div class="social-icons">
                <a href="#" class="social-icon" target="_blank" title="Facebook"><i class="icon-facebook-f"></i></a>
                <a href="#" class="social-icon" target="_blank" title="Twitter"><i class="icon-twitter"></i></a>
                <a href="#" class="social-icon" target="_blank" title="Instagram"><i class="icon-instagram"></i></a>
                <a href="#" class="social-icon" target="_blank" title="Youtube"><i class="icon-youtube"></i></a>
            </div><!-- End .social-icons -->
        </div><!-- End .mobile-menu-wrapper -->
    </div><!-- End .mobile-menu-container -->

    <!-- Add Address Modal -->
    <div class="modal fade" id="addressModal" tabindex="-1" role="dialog" aria-labelledby="addressModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="addressForm" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title" id="addressModalLabel" style="color: white;">Add New Address</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" style="padding: 20px;">
                        <div class="form-group">
                            <label for="modalFullName">Full Name</label>
                            <input type="text" class="form-control" id="modalFullName" required>
                            <div class="invalid-feedback">Full Name is required and should contain only letters and
                                spaces.</div>
                        </div>
                        <div class="form-group">
                            <label for="modalStreetAddress">Street Address</label>
                            <input type="text" class="form-control" id="modalStreetAddress" required>
                            <div class="invalid-feedback">Street Address is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="modalApartment">Apartment</label>
                            <input type="text" class="form-control" id="modalApartment">
                        </div>
                        <div class="form-group">
                            <label for="modalTown">Town</label>
                            <input type="text" class="form-control" id="modalTown" required>
                            <div class="invalid-feedback">Town is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="modalCity">City</label>
                            <input type="text" class="form-control" id="modalCity" required>
                            <div class="invalid-feedback">City is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="modalState">State</label>
                            <input type="text" class="form-control" id="modalState" required>
                            <div class="invalid-feedback">State is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="modalPostcode">Postcode</label>
                            <input type="text" class="form-control" id="modalPostcode" required>
                            <div class="invalid-feedback">Postcode is required and should be a 6-digit number.</div>
                        </div>
                        <div class="form-group">
                            <label for="modalPhone">Phone</label>
                            <input type="text" class="form-control" id="modalPhone" required>
                            <div class="invalid-feedback">Phone is required and should be a 10-digit number without
                                a
                                leading 0.</div>
                        </div>
                        <div class="form-group">
                            <label for="modalEmail">Email</label>
                            <input type="email" class="form-control" id="modalEmail" required>
                            <div class="invalid-feedback">Valid Email is required.</div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Address</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Edit Address Modal -->
    <div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="editAddressForm" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title" id="editAddressModalLabel" style="color: white;">Edit Address</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" style="padding: 20px;">
                        <input type="hidden" id="editAddressId">
                        <div class="form-group">
                            <label for="editFullName">Full Name</label>
                            <input type="text" class="form-control" id="editFullName" required>
                            <div class="invalid-feedback">Full Name is required and should contain only letters and
                                spaces.</div>
                        </div>
                        <div class="form-group">
                            <label for="editStreetAddress">Street Address</label>
                            <input type="text" class="form-control" id="editStreetAddress" required>
                            <div class="invalid-feedback">Street Address is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="editApartment">Apartment</label>
                            <input type="text" class="form-control" id="editApartment">
                        </div>
                        <div class="form-group">
                            <label for="editTown">Town</label>
                            <input type="text" class="form-control" id="editTown" required>
                            <div class="invalid-feedback">Town is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="editCity">City</label>
                            <input type="text" class="form-control" id="editCity" required>
                            <div class="invalid-feedback">City is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="editState">State</label>
                            <input type="text" class="form-control" id="editState" required>
                            <div class="invalid-feedback">State is required.</div>
                        </div>
                        <div class="form-group">
                            <label for="editPostcode">Postcode</label>
                            <input type="text" class="form-control" id="editPostcode" required>
                            <div class="invalid-feedback">Postcode is required and should be a 6-digit number.</div>
                        </div>
                        <div class="form-group">
                            <label for="editPhone">Phone</label>
                            <input type="text" class="form-control" id="editPhone" required>
                            <div class="invalid-feedback">Phone is required and should be a 10-digit number without
                                a
                                leading 0.</div>
                        </div>
                        <div class="form-group">
                            <label for="editEmail">Email</label>
                            <input type="email" class="form-control" id="editEmail" required>
                            <div class="invalid-feedback">Valid Email is required.</div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Moupon Modal Structure -->
    <div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="couponModalLabel">Available Coupons</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <% coupons.forEach(coupon=> { %>
                        <ul class="list-group mb-3">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>Code:</strong>
                                    <span id="couponCode-<%= coupon.couponCode %>">
                                        <%= coupon.couponCode %>
                                    </span>

                                    <br>
                                    <strong>Redeem amount:</strong>
                                    <%= coupon.redeemAmount %> <br>
                                        <strong>Minimum amount:</strong>
                                        <%= coupon.minAmount %>
                                </div>
                            </li>
                        </ul>
                        <% }) %>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this address?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Plugins JS File -->
    <script src="assets/js/jquery.min.js"></script>
    <script src="assets/js/bootstrap.bundle.min.js"></script>
    <script src="assets/js/jquery.hoverIntent.min.js"></script>
    <script src="assets/js/jquery.waypoints.min.js"></script>
    <script src="assets/js/superfish.min.js"></script>
    <script src="assets/js/owl.carousel.min.js"></script>
    <!-- Main JS File -->
    <script src="assets/js/main.js"></script>
    <!-- SweetAlert CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- SweetAlert JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const formFields = [
                { id: 'firstName', validation: validateName },
                { id: 'lastName', validation: validateName },
                { id: 'streetAddress', validation: validateNonEmpty },
                { id: 'apartment', validation: validateNonEmpty },
                { id: 'town', validation: validateNonEmpty },
                { id: 'city', validation: validateNonEmpty },
                { id: 'state', validation: validateNonEmpty },
                { id: 'pin_code', validation: validatePinCode },
                { id: 'phone', validation: validatePhone },
                { id: 'email', validation: validateEmail },
            ];

            formFields.forEach(field => {
                const input = document.getElementById(field.id);
                input.addEventListener('blur', () => {
                    const errorMessage = field.validation(input.value);
                    const errorElement = document.getElementById(field.id + 'Error');
                    errorElement.textContent = errorMessage;


                });
            });



            function validateName(name) {
                if (name.trim() === '') return 'This field is required.';
                if (/[^a-zA-Z\s]/.test(name)) return 'Name cannot contain numbers or special characters.';
                return '';
            }

            function validateNonEmpty(value) {
                if (value.trim() === '') return 'This field is required.';
                return '';
            }

            function validatePinCode(pinCode) {
                if (pinCode.trim() === '') return 'This field is required.';
                if (!/^\d{6}$/.test(pinCode)) return 'Postcode must be exactly 6 digits.';
                return '';
            }

            function validatePhone(phone) {
                if (phone.trim() === '') return 'This field is required.';
                if (!/^[1-9]\d{9}$/.test(phone)) return 'Phone number must be 10 digits and cannot start with 0.';
                return '';
            }

            function validateEmail(email) {
                if (email.trim() === '') return 'This field is required.';
                if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) return 'Please enter a valid email address.';
                return '';
            }
        })
    </script>


    <!-- retrieve and display the address -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const storedAddress = localStorage.getItem('billingAddress')
            console.log('bilin addres get localstorage');
            if (storedAddress) {
                const address = JSON.parse(storedAddress)
                displayBillingAddress(address)
            }
        })

        function displayBillingAddress(address) {
            const billingAddress = `
            <p>${address.fullName}</p>
            <p>${address.phone}</p>
            <p>${address.email}</p>
            <p>${address.streetAddress}</p>
            <p>${address.apartment}</p>
            <p>${address.town}, ${address.city}, ${address.state}, ${address.postcode}</p>
            `;
            const billingAddressElement = document.getElementById('billingAddress').innerHTML = billingAddress
            if (billingAddressElement) {
                billingAddressElement.innerHTML = billingAddress
            } else {
                console.log('Billing address element not found');
            }
        }   
    </script>




    //place order
    <script>
        document.getElementById('submitForm').addEventListener('click', function (event) {
            event.preventDefault();

            const userId = "<%= user._id %>";
            // const addressId = document.querySelector('input[name="address"]:checked').value;
            const addressId = document.querySelector('input[name="address"]:checked')?.value;
            const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;

            if (!addressId) {
                Swal.fire({
                    title: 'Address Required',
                    text: 'Please select an address before placing the order.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return;
            }

            fetch('/checkout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    userId: userId,
                    addressId: addressId,
                    paymentMethod: paymentMethod,
                }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // alert('Order placed successfully!');
                        window.location.href = data.redirectUrl;
                        // Redirect to order confirmation page or display success message
                    } else {
                        alert(data.message || 'Error placing order.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Error placing order.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
        });



        //apply coupon for products
        async function applyCoupon() {
            const couponCode = document.getElementById('checkout-discount-input').value;

            try {
                const response = await fetch('/apply-coupon', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ couponCode })
                });

                const result = await response.json();

                if (result.success) {
                    const couponDiscount = parseFloat(result.couponDiscount);
                    const subtotalValue = parseFloat(result.subtotal);
                    const newTotal = parseFloat(result.newTotal);

                    // Ensure elements are found in the DOM
                    const totalAmountElement = document.getElementById('totalAmount');
                    const couponStatusElement = document.getElementById('couponStatus');
                    const newTotalAmountElement = document.getElementById('newTotalAmount');

                    if (totalAmountElement && couponStatusElement && newTotalAmountElement) {
                        totalAmountElement.innerText = '₹' + subtotalValue.toFixed(2);
                        couponStatusElement.innerText = '₹' + couponDiscount.toFixed(2);
                        newTotalAmountElement.innerText = '₹' + newTotal.toFixed(2);

                        Swal.fire({
                            title: 'Coupon Applied',
                            text: 'Coupon applied successfully!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                    } else {
                        console.error('Elements for totalAmount, couponStatus, or newTotalAmount are not found in the DOM.');
                    }
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: result.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error applying coupon:', error);

                Swal.fire({
                    title: 'Failed',
                    text: 'Failed to apply coupon.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }








    </script>



    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const proceedButton = document.getElementById('proceed-button');
            if (proceedButton) {
                proceedButton.addEventListener('click', function (event) {
                    event.preventDefault();
                    console.log('Proceed button clicked');

                    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
                    if (paymentMethod) {
                        console.log('Selected payment method:', paymentMethod.value);

                        // Ensure these elements are defined within the proper scope
                        const totalValueElement = document.getElementById('totalValue');
                        const newTotalValueElement = document.getElementById('newTotalValue');


                        // Validate existence and parse values
                        const orderAmount = totalValueElement ? parseFloat(totalValueElement.innerText.trim()) : null;
                        const newOrderAmount = newTotalValueElement ? parseFloat(newTotalValueElement.innerText.trim()) : null;

                        if (orderAmount === null || isNaN(orderAmount)) {
                            Swal.fire({
                                title: 'Order Amount Error',
                                text: 'Unable to retrieve order amount. Please check your inputs.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                            return;
                        }

                        if (paymentMethod.value === 'COD' && orderAmount > 1000) {
                            Swal.fire({
                                title: 'Cash on Delivery Not Allowed',
                                text: 'Cash on Delivery is not allowed for orders above ₹1000.',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                            return;
                        }

                        const addressId = document.querySelector('input[name="address"]:checked');
                        if (addressId) {
                            console.log('Selected address ID:', addressId.value);

                            fetch('/checkout', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    addressId: addressId.value,
                                    paymentMethod: paymentMethod.value,
                                    totalAmount: orderAmount
                                }),
                            })
                                .then(response => response.json())
                                .then(data => {
                                    console.log('Checkout response:', data);
                                    if (data.success) {
                                        if (paymentMethod.value === 'Razorpay') {
                                            // Initialize Razorpay options
                                            const options = {
                                                key: data.razorpayKey,
                                                amount: data.amount,
                                                currency: "INR",
                                                name: "FurnSpace",
                                                description: "Test Transaction",
                                                order_id: data.razorpayOrderId, // Make sure this matches the order_id from Razorpay
                                                handler: function (response) {
                                                    console.log('Razorpay payment response:', response);
                                                    // Send payment details to server for verification
                                                    fetch('/verify-payment', {
                                                        method: 'POST',
                                                        headers: {
                                                            'Content-Type': 'application/json',
                                                        },
                                                        body: JSON.stringify({
                                                            razorpayPaymentId: response.razorpay_payment_id,
                                                            razorpayOrderId: response.razorpay_order_id,
                                                            razorpaySignature: response.razorpay_signature
                                                        }),
                                                    })
                                                        .then(res => res.json())
                                                        .then(verifyData => {
                                                            if (verifyData.success) {
                                                                Swal.fire({
                                                                    title: 'Order Successful',
                                                                    text: `Your order of ₹${orderAmount.toFixed(2)} was successfully processed.`,
                                                                    icon: 'success',
                                                                    confirmButtonText: 'OK'
                                                                }).then(() => {
                                                                    window.location.href = `/checkout/ordered/${verifyData.orderId}`;
                                                                });
                                                            } else {
                                                                console.error('Payment verification failed:', verifyData);
                                                                Swal.fire({
                                                                    title: 'Error',
                                                                    text: 'failed to place order',
                                                                    icon: 'Error',
                                                                    confirmButtonText: 'OK'
                                                                })
                                                            }
                                                        });
                                                },
                                                prefill: {
                                                    name: data.customerName,
                                                    email: data.customerEmail,
                                                    contact: data.customerContact,
                                                },
                                                theme: {
                                                    color: "#3399cc",
                                                },
                                            };

                                            // Create a new Razorpay instance and open the payment dialog
                                            const rzp1 = new Razorpay(options);
                                            rzp1.on('payment.failed', function (response) {
                                                console.error('Payment failed:', response.error);

                                                // Send request to backend to update payment status to "Failed"
                                                fetch('/checkout/razorpay-failure', {
                                                    method: 'POST',
                                                    headers: {
                                                        'Content-Type': 'application/json'
                                                    },
                                                    body: JSON.stringify({
                                                        orderId: data.orderId // Pass the relevant order ID
                                                    })
                                                })
                                                    .then(res => res.json())
                                                    .then(updateData => {
                                                        if (updateData.success) {
                                                            Swal.fire({
                                                                title: 'Payment Failed',
                                                                text: 'The payment process failed. Your order status has been updated.',
                                                                icon: 'error',
                                                                confirmButtonText: 'OK'
                                                            });
                                                        } else {
                                                            console.error('Failed to update order status:', updateData.message);
                                                            Swal.fire({
                                                                title: 'Error',
                                                                text: 'Failed to update order status. Please try again.',
                                                                icon: 'error',
                                                                confirmButtonText: 'OK'
                                                            });
                                                        }
                                                    })
                                                    .catch(error => {
                                                        console.error('Error updating order status:', error);
                                                        Swal.fire({
                                                            title: 'Error',
                                                            text: 'An error occurred while updating the order status. Please try again.',
                                                            icon: 'error',
                                                            confirmButtonText: 'OK'
                                                        });
                                                    });
                                            });

                                            rzp1.open();
                                        } else if (paymentMethod.value === 'Wallet') {
                                            Swal.fire({
                                                title: 'Order Successful',
                                                text: `Your order of ₹${orderAmount.toFixed(2)} was successfully processed using your wallet balance.`,
                                                icon: 'success',
                                                confirmButtonText: 'OK'
                                            }).then(() => {
                                                window.location.href = `/checkout/ordered/${data.orderId}`;
                                            });
                                        } else {
                                            Swal.fire({
                                                title: 'Order Successful',
                                                text: `Your order of ₹${orderAmount.toFixed(2)} was successfully processed.`,
                                                icon: 'success',
                                                confirmButtonText: 'OK'
                                            }).then(() => {
                                                window.location.href = `/checkout/ordered/${data.orderId}`;
                                            });
                                        }
                                    } else {
                                        Swal.fire({
                                            title: 'Error',
                                            text: data.message,
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error('Checkout error:', error);
                                    Swal.fire({
                                        title: 'Error',
                                        text: 'An error occurred during checkout. Please try again.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                });
                        } else {
                            Swal.fire({
                                title: 'Address Required',
                                text: 'Please select an address before placing the order.',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                        }
                    } else {
                        Swal.fire({
                            title: 'Payment Method Required',
                            text: 'Please select a payment method before placing the order.',
                            icon: 'warning',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            } else {
                console.error('Proceed button not found');
            }
        });
    </script>






    <!-- add new address script -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const addressForm = document.getElementById("addressForm");
            const editAddressForm = document.getElementById("editAddressForm");

            const namePattern = /^[A-Za-z\s]+$/;
            const phonePattern = /^[1-9]\d{9}$/;
            const postcodePattern = /^\d{6}$/;

            addressForm.addEventListener("input", function (event) {
                validateField(event.target);
            });

            editAddressForm.addEventListener("input", function (event) {
                validateField(event.target);
            });

            function validateField(target) {
                let isValid = true;

                if (target.id === "modalFullName" || target.id === "editFullName") {
                    isValid = namePattern.test(target.value);
                    target.setCustomValidity(isValid ? "" : "Full Name is required and should contain only letters and spaces.");
                } else if (target.id === "modalPhone" || target.id === "editPhone") {
                    isValid = phonePattern.test(target.value);
                    target.setCustomValidity(isValid ? "" : "Phone is required and should be a 10-digit number without a leading 0.");
                } else if (target.id === "modalPostcode" || target.id === "editPostcode") {
                    isValid = postcodePattern.test(target.value);
                    target.setCustomValidity(isValid ? "" : "Postcode is required and should be a 6-digit number.");
                }

                target.classList.toggle("is-invalid", !isValid);
                target.classList.toggle("is-valid", isValid);
            }

            addressForm.addEventListener('submit', function (event) {
                event.preventDefault();

                if (addressForm.checkValidity()) {
                    const formData = {
                        fullName: document.getElementById('modalFullName').value,
                        streetAddress: document.getElementById('modalStreetAddress').value,
                        apartment: document.getElementById('modalApartment').value,
                        town: document.getElementById('modalTown').value,
                        city: document.getElementById('modalCity').value,
                        state: document.getElementById('modalState').value,
                        postcode: document.getElementById('modalPostcode').value,
                        phone: document.getElementById('modalPhone').value,
                        email: document.getElementById('modalEmail').value
                    };

                    fetch('/address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formData)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                $('#addressModal').modal('hide');
                                Swal.fire({
                                    title: 'Success',
                                    text: 'Address added successfully.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        location.reload()
                                    }
                                })
                                fetchAddresses();
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Failed to add address.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        })
                        .catch(error => {
                            Swal.fire({
                                title: 'Error',
                                text: 'Error saving address.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        });
                } else {
                    addressForm.classList.add("was-validated");
                }
            });

            editAddressForm.addEventListener('submit', function (event) {
                event.preventDefault();

                if (editAddressForm.checkValidity()) {
                    const addressId = document.getElementById('editAddressId').value;
                    const formData = {
                        fullName: document.getElementById('editFullName').value,
                        streetAddress: document.getElementById('editStreetAddress').value,
                        apartment: document.getElementById('editApartment').value,
                        town: document.getElementById('editTown').value,
                        city: document.getElementById('editCity').value,
                        state: document.getElementById('editState').value,
                        postcode: document.getElementById('editPostcode').value,
                        phone: document.getElementById('editPhone').value,
                        email: document.getElementById('editEmail').value
                    };

                    fetch(`/address/update/${addressId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formData)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                $('#editAddressModal').modal('hide');
                                Swal.fire({
                                    title: 'Success',
                                    text: 'Address updated successfully.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                });
                                fetchAddresses();
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Failed to update address.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        })
                        .catch(error => {
                            Swal.fire({
                                title: 'Error',
                                text: 'Error updating address.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        });
                } else {
                    editAddressForm.classList.add("was-validated");
                }
            });

            document.addEventListener('DOMContentLoaded', function () {
                document.addEventListener('click', function (event) {
                    if (event.target && event.target.classList.contains('btn-delete-address')) {
                        event.preventDefault();  // Prevent default link action

                        const addressId = event.target.getAttribute('data-id');

                        $('#confirmDeleteModal').modal('show');

                        // Ensure confirmDelete button is available in the DOM
                        const confirmDeleteButton = document.getElementById('confirmDelete');
                        if (confirmDeleteButton) {
                            confirmDeleteButton.onclick = function () {
                                $('#confirmDeleteModal').modal('hide');
                                deleteAddress(addressId);
                            };
                        } else {
                            console.error("Confirm delete button not found in the DOM.");
                        }
                    }
                });
            });

            function deleteAddress(addressId) {
                fetch(`/address/${addressId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            fetchAddresses();  // Refresh or reload the address list
                            Swal.fire({
                                title: 'Success',
                                text: 'Address deleted successfully.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: 'Failed to delete address.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error',
                            text: 'Error deleting address.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
            }



            function fetchAddresses() {
                fetch('/addresses')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success && Array.isArray(data.addresses)) {
                            const addressList = document.getElementById('addressList');
                            addressList.innerHTML = '';
                            data.addresses.forEach(address => {
                                const addressItem = document.createElement('div');
                                addressItem.className = 'address-item';
                                addressItem.innerHTML = `
                            <p><strong>${address.fullName}</strong></p>
                            <p>${address.streetAddress}, ${address.apartment} <br>
                                ${address.town}, ${address.city} <br>
                                ${address.state}, ${address.postcode} <br>
                                ${address.phone} <br>
                                ${address.email}</p>
                            <a href="#" class="btn-edit-address" data-id="${address._id}">Edit</a>
                            <a href="#" class="btn-delete-address" data-id="${address._id}">Delete</a>
                        `;
                                addressList.appendChild(addressItem);
                            });

                            const editButtons = document.querySelectorAll('.btn-edit-address');
                            editButtons.forEach(button => {
                                button.addEventListener('click', function () {
                                    const addressId = this.getAttribute('data-id');
                                    const address = data.addresses.find(addr => addr._id === addressId);
                                    if (address) {
                                        document.getElementById('editAddressId').value = address._id;
                                        document.getElementById('editFullName').value = address.fullName;
                                        document.getElementById('editStreetAddress').value = address.streetAddress;
                                        document.getElementById('editApartment').value = address.apartment;
                                        document.getElementById('editTown').value = address.town;
                                        document.getElementById('editCity').value = address.city;
                                        document.getElementById('editState').value = address.state;
                                        document.getElementById('editPostcode').value = address.postcode;
                                        document.getElementById('editPhone').value = address.phone;
                                        document.getElementById('editEmail').value = address.email;
                                        $('#editAddressModal').modal('show');
                                    }
                                });
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: 'Failed to fetch addresses.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error',
                            text: 'Error fetching addresses.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
            }

            fetchAddresses();
        });


    </script>


    <!-- clear the coupon code in input -->
    <script>
        window.addEventListener('load', () => {
            const button = document.querySelector('#clear');
            button.addEventListener('click', () => {
                document.querySelector('#checkout-discount-input').value = "";
                document.getElementById('removeCoupon').innerText = 'Coupon code removed successfully'
                setTimeout(() => {
                    document.getElementById('removeCoupon').innerText = ''
                    window.location.reload()
                }, 2000);

            });
        }); 
    </script>











    <% - include('../layout/footer.ejs') %>